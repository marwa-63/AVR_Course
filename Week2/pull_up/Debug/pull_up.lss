
pull_up.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000019a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000003cc  00000000  00000000  000001f0  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000704  00000000  00000000  000005bc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 cb 00 	jmp	0x196	; 0x196 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:

#define DDRB *((u8*)0x37)
#define PORTB *((u8*)0x38)*/

int main(void)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
	//pin 0 out off
	DDRA |=1;
  74:	aa e3       	ldi	r26, 0x3A	; 58
  76:	b0 e0       	ldi	r27, 0x00	; 0
  78:	ea e3       	ldi	r30, 0x3A	; 58
  7a:	f0 e0       	ldi	r31, 0x00	; 0
  7c:	80 81       	ld	r24, Z
  7e:	81 60       	ori	r24, 0x01	; 1
  80:	8c 93       	st	X, r24
	PORTA &= ~1;
  82:	ab e3       	ldi	r26, 0x3B	; 59
  84:	b0 e0       	ldi	r27, 0x00	; 0
  86:	eb e3       	ldi	r30, 0x3B	; 59
  88:	f0 e0       	ldi	r31, 0x00	; 0
  8a:	80 81       	ld	r24, Z
  8c:	8e 7f       	andi	r24, 0xFE	; 254
  8e:	8c 93       	st	X, r24
	//pin 1 out off
	DDRA |= (1<<1);
  90:	aa e3       	ldi	r26, 0x3A	; 58
  92:	b0 e0       	ldi	r27, 0x00	; 0
  94:	ea e3       	ldi	r30, 0x3A	; 58
  96:	f0 e0       	ldi	r31, 0x00	; 0
  98:	80 81       	ld	r24, Z
  9a:	82 60       	ori	r24, 0x02	; 2
  9c:	8c 93       	st	X, r24
	PORTA &= ~(1<<1);
  9e:	ab e3       	ldi	r26, 0x3B	; 59
  a0:	b0 e0       	ldi	r27, 0x00	; 0
  a2:	eb e3       	ldi	r30, 0x3B	; 59
  a4:	f0 e0       	ldi	r31, 0x00	; 0
  a6:	80 81       	ld	r24, Z
  a8:	8d 7f       	andi	r24, 0xFD	; 253
  aa:	8c 93       	st	X, r24
	//sw0 in
	DDRB &= ~1;
  ac:	a7 e3       	ldi	r26, 0x37	; 55
  ae:	b0 e0       	ldi	r27, 0x00	; 0
  b0:	e7 e3       	ldi	r30, 0x37	; 55
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	80 81       	ld	r24, Z
  b6:	8e 7f       	andi	r24, 0xFE	; 254
  b8:	8c 93       	st	X, r24
	//pull up
	PORTB |=1;
  ba:	a8 e3       	ldi	r26, 0x38	; 56
  bc:	b0 e0       	ldi	r27, 0x00	; 0
  be:	e8 e3       	ldi	r30, 0x38	; 56
  c0:	f0 e0       	ldi	r31, 0x00	; 0
  c2:	80 81       	ld	r24, Z
  c4:	81 60       	ori	r24, 0x01	; 1
  c6:	8c 93       	st	X, r24

	//sw1 in
	DDRB &= ~(1<<1);
  c8:	a7 e3       	ldi	r26, 0x37	; 55
  ca:	b0 e0       	ldi	r27, 0x00	; 0
  cc:	e7 e3       	ldi	r30, 0x37	; 55
  ce:	f0 e0       	ldi	r31, 0x00	; 0
  d0:	80 81       	ld	r24, Z
  d2:	8d 7f       	andi	r24, 0xFD	; 253
  d4:	8c 93       	st	X, r24
	//pull up
	PORTB |=(1<<1);
  d6:	a8 e3       	ldi	r26, 0x38	; 56
  d8:	b0 e0       	ldi	r27, 0x00	; 0
  da:	e8 e3       	ldi	r30, 0x38	; 56
  dc:	f0 e0       	ldi	r31, 0x00	; 0
  de:	80 81       	ld	r24, Z
  e0:	82 60       	ori	r24, 0x02	; 2
  e2:	8c 93       	st	X, r24

	//sw2 in
	DDRB &= ~(1<<2);
  e4:	a7 e3       	ldi	r26, 0x37	; 55
  e6:	b0 e0       	ldi	r27, 0x00	; 0
  e8:	e7 e3       	ldi	r30, 0x37	; 55
  ea:	f0 e0       	ldi	r31, 0x00	; 0
  ec:	80 81       	ld	r24, Z
  ee:	8b 7f       	andi	r24, 0xFB	; 251
  f0:	8c 93       	st	X, r24
	//pull up
	PORTB |=(1<<2);
  f2:	a8 e3       	ldi	r26, 0x38	; 56
  f4:	b0 e0       	ldi	r27, 0x00	; 0
  f6:	e8 e3       	ldi	r30, 0x38	; 56
  f8:	f0 e0       	ldi	r31, 0x00	; 0
  fa:	80 81       	ld	r24, Z
  fc:	84 60       	ori	r24, 0x04	; 4
  fe:	8c 93       	st	X, r24

	while(1)
	{
		if((PINB&1)==0)
 100:	e6 e3       	ldi	r30, 0x36	; 54
 102:	f0 e0       	ldi	r31, 0x00	; 0
 104:	80 81       	ld	r24, Z
 106:	88 2f       	mov	r24, r24
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	81 70       	andi	r24, 0x01	; 1
 10c:	90 70       	andi	r25, 0x00	; 0
 10e:	00 97       	sbiw	r24, 0x00	; 0
 110:	41 f4       	brne	.+16     	; 0x122 <main+0xb6>
		{
			PORTA |= 1;
 112:	ab e3       	ldi	r26, 0x3B	; 59
 114:	b0 e0       	ldi	r27, 0x00	; 0
 116:	eb e3       	ldi	r30, 0x3B	; 59
 118:	f0 e0       	ldi	r31, 0x00	; 0
 11a:	80 81       	ld	r24, Z
 11c:	81 60       	ori	r24, 0x01	; 1
 11e:	8c 93       	st	X, r24
 120:	07 c0       	rjmp	.+14     	; 0x130 <main+0xc4>
		}
		else PORTA &= ~1;
 122:	ab e3       	ldi	r26, 0x3B	; 59
 124:	b0 e0       	ldi	r27, 0x00	; 0
 126:	eb e3       	ldi	r30, 0x3B	; 59
 128:	f0 e0       	ldi	r31, 0x00	; 0
 12a:	80 81       	ld	r24, Z
 12c:	8e 7f       	andi	r24, 0xFE	; 254
 12e:	8c 93       	st	X, r24

		 if( ((PINB>>1)&1)==0 ) PORTA |= (1<<1);
 130:	e6 e3       	ldi	r30, 0x36	; 54
 132:	f0 e0       	ldi	r31, 0x00	; 0
 134:	80 81       	ld	r24, Z
 136:	86 95       	lsr	r24
 138:	88 2f       	mov	r24, r24
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	81 70       	andi	r24, 0x01	; 1
 13e:	90 70       	andi	r25, 0x00	; 0
 140:	00 97       	sbiw	r24, 0x00	; 0
 142:	41 f4       	brne	.+16     	; 0x154 <main+0xe8>
 144:	ab e3       	ldi	r26, 0x3B	; 59
 146:	b0 e0       	ldi	r27, 0x00	; 0
 148:	eb e3       	ldi	r30, 0x3B	; 59
 14a:	f0 e0       	ldi	r31, 0x00	; 0
 14c:	80 81       	ld	r24, Z
 14e:	82 60       	ori	r24, 0x02	; 2
 150:	8c 93       	st	X, r24
 152:	07 c0       	rjmp	.+14     	; 0x162 <main+0xf6>
		 else PORTA &= ~(1<<1);
 154:	ab e3       	ldi	r26, 0x3B	; 59
 156:	b0 e0       	ldi	r27, 0x00	; 0
 158:	eb e3       	ldi	r30, 0x3B	; 59
 15a:	f0 e0       	ldi	r31, 0x00	; 0
 15c:	80 81       	ld	r24, Z
 15e:	8d 7f       	andi	r24, 0xFD	; 253
 160:	8c 93       	st	X, r24
		 if( ((PINB>>2)&1)==0 )
 162:	e6 e3       	ldi	r30, 0x36	; 54
 164:	f0 e0       	ldi	r31, 0x00	; 0
 166:	80 81       	ld	r24, Z
 168:	86 95       	lsr	r24
 16a:	86 95       	lsr	r24
 16c:	88 2f       	mov	r24, r24
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	81 70       	andi	r24, 0x01	; 1
 172:	90 70       	andi	r25, 0x00	; 0
 174:	00 97       	sbiw	r24, 0x00	; 0
 176:	21 f6       	brne	.-120    	; 0x100 <main+0x94>
			{
			PORTA |= 1;
 178:	ab e3       	ldi	r26, 0x3B	; 59
 17a:	b0 e0       	ldi	r27, 0x00	; 0
 17c:	eb e3       	ldi	r30, 0x3B	; 59
 17e:	f0 e0       	ldi	r31, 0x00	; 0
 180:	80 81       	ld	r24, Z
 182:	81 60       	ori	r24, 0x01	; 1
 184:	8c 93       	st	X, r24
			PORTA |= (1<<1);
 186:	ab e3       	ldi	r26, 0x3B	; 59
 188:	b0 e0       	ldi	r27, 0x00	; 0
 18a:	eb e3       	ldi	r30, 0x3B	; 59
 18c:	f0 e0       	ldi	r31, 0x00	; 0
 18e:	80 81       	ld	r24, Z
 190:	82 60       	ori	r24, 0x02	; 2
 192:	8c 93       	st	X, r24
 194:	b5 cf       	rjmp	.-150    	; 0x100 <main+0x94>

00000196 <_exit>:
 196:	f8 94       	cli

00000198 <__stop_program>:
 198:	ff cf       	rjmp	.-2      	; 0x198 <__stop_program>
